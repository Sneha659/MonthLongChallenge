//first of all create a min array then  then implement it in the stack for which check from end of //nums in which top of element is greater min then check nums[j] is true then return true then //false
//time complexity o(n2) and space complexity o(n)
class Solution {
public:
    bool find132pattern(vector<int>& nums) {
        int n=nums.size();
        vector<int> minarr(n);
        minarr[0]=nums[0];
        for(int i=1;i<n;i++){
            minarr[i]=min(nums[i],minarr[i-1]);
            
        }
        stack<int> s;
        for(int j=n-1; j>=0;j--){
            while(!s.empty()&& s.top()<=minarr[j]){
                s.pop();
            }
            if(!s.empty()&& s.top()<nums[j]){
                return true;
            }
            s.push(nums[j]);
            
        }
        return false;
    
        
    }
};
